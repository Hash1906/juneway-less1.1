version: '1'

services:
  nginx:
    restart: always
    depends_on:
      - app
    container_name: nginx
    build: ./nginx/
    ports:
      - "8000:8000"
    networks:
      - frontend

  postgresql:
    restart: always
    container_name: db
    image: postgres:15.2
    env_file:
      - .env    
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3  
    expose:
      - "5432"
    networks:
      - backend
    volumes:
      - pgdata:/var/lib/postgresql/data/

  app:
    restart: always
    container_name: web
    depends_on:
      - postgresql
    environment:
      DEBUG: 'true'
    build: ./web
    expose:
      - "8000"
    networks:
      - frontend
      - backend
    command: /usr/local/bin/gunicorn --chdir /usr/src/app/django_blog wsgi:application -w 1 -b :8000


volumes:
  pgdata:

networks:
  frontend:
  backend:
